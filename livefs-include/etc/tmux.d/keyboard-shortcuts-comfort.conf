# TODO: better document each line (some black magic and lots of dependencies in here)

# a nicer locate that sends it's files to ls -lah, with colors
bind-key a command-prompt -p "allilocate (* = wildcard):" "split-window -p 60 'source /etc/profile.d/less-termcaps.sh && eval $(dircolors -b /etc/DIR_COLORS) && locate -0i \"*%%*\" | xargs -0r ls -lahd --color=always --time-style=+\"%a %F %R\"|& less -SRiM~ --shift 1 -PM\"locate -i %1: ?f%%f .?n?m(file %%i of %%m) ..?ltlines %%lt-%%lb?L/%%L.:byte %%bB?s/%%s. .?e(END) ?x- Next\: %%x.:?pB%%pB\%..%%t\"'"

# read manuals
bind-key m command-prompt -p "man:" "split-window -c '#{pane_current_path}' -p 90 'source /etc/profile.d/less-termcaps.sh && LESS=\"-SRiMJj.2~ --shift 5\" man %1 || read -n1'; select-pane -T 'manual(%1)'"
bind-key M command-prompt -p "info:" "split-window -p 90 'pinfo %%'"

# check out dictionary entries
bind-key d command-prompt -p "dict:" "new-window -n 'dict(%1)' 'dict-colorizer \"%1\" 2>&1|less -SRiM~ --shift 1'"

# investigate at debian package
bind-key e command-prompt -p "dpkg-info:" "split-window -p 80 'dpkg-info %%'"

# find files in installed packages
bind-key E command-prompt -p "dlocate search:" "split-window -p 80 'dlocate %1|grep --color=always -- "%1"|less -SRiM~'"

# edit files with vim
bind-key j command-prompt -p "vim:" "new-window -c '#{pane_current_path}' 'stty -ixon -ixoff && vim %1'; select-pane -T '%1'"
bind-key J command-prompt -p "vim-:" "split-window -v -c '#{pane_current_path}' 'stty -ixon -ixoff && vim %1'; select-pane -T '%1'"

# search text with ripgrep
bind-key k command-prompt -p "rg -pzi:" "split-window -p 80 -c '#{pane_current_path}' 'stty -ixon -ixoff && rg -pzi %%|less -SRiM~ --shift 1'"
bind-key K command-prompt -p "rg -pzLuuC10:" "split-window -p 80 -c '#{pane_current_path}' 'stty -ixon -ixoff && rg -pzLuuC10 %%|less -SRiM~ --shift 1'"

# top most important tmux actions: run a command in a new pane or a new window
bind-key s command-prompt -p "split-window:" "split-window -v -c '#{pane_current_path}' 'tmux-pane-wrap -v \"%1\"; tmux-pane-respawn-prompt'"
bind-key n command-prompt -p "new-window:" "new-window -c '#{pane_current_path}' -n '%1' 'tmux-pane-wrap -v \"%1\"; tmux-pane-respawn-prompt'"

# split horizontally and run command in new pane
bind-key S command-prompt -p "split-window:" "split-window -h -c '#{pane_current_path}' 'tmux-pane-wrap -v \"%1\"; tmux-pane-respawn-prompt'"

# open a new ranger file manager window in the current working directory
bind-key b command-prompt -p 'ranger:' 'new-window -c "#{pane_current_path}" "tmux-pane-wrap ranger %1"'
bind-key B split-window -c '#{pane_current_path}' 'tmux-pane-wrap ranger' # \; select-pane -T ranger \; set-option remain-on-exit on

# search web
bind-key g command-prompt -p "google:" "split-window -c '#{pane_current_path}' -p 90 'elinks -no-home -no-connect \"g %%\"'"

# search history
bind-key h command-prompt -p "bash history search:" "split-window -v -c '#{pane_current_path}' 'tmux-pane-wrap \"histsearch %%|less\"'"
bind-key H new-window  -c '#{pane_current_path}' "bash-history-spawn; tmux-pane-respawn-prompt"

bind-key F2 command-prompt -I "#W" "rename-window '%%'"

# stopwatch
bind-key C-s split-window -l 8 "CACA_DRIVER=ncurses faketime 00:00:00 cacaclock"

# git shortcuts
bind-key C-g split-window -p 80 -c "#{pane_current_path}" "tmux-pane-wrap -v git pull --verbose --progress; tmux-pane-respawn-prompt"
bind-key M-g split-window -p 80 -c "#{pane_current_path}" "tmux-pane-wrap -v git fetch --verbose --all --prune --progress; tmux-pane-respawn-prompt"
bind-key l split-window -p 80 -c "#{pane_current_path}" "{ git -c color.status=always status . ; echo; git difftool . 2>/dev/null; } | less -SRiM~ --shift 1"\; select-pane -T "git changes in #{pane_current_path}"
bind-key L new-window -c '#{pane_current_path}' "tmux-pane-wrap -v git roll; tmux-pane-respawn-prompt"

